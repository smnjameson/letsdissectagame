.segment Code [outBin="slideshow.crt", allowOverlap]

//Initialise cart
#define GMOD2	//Valid values D64, MAGICDESK, GMOD2
.var CART_ZP_START = $e8 //10 bytes min
.var CART_COPY_BASE = $0400	//192bytes required for cart, For D64 must be loadraw from loadersymbols-c64.inc
.var CART_MAX_FILES = 256 //256 is max
.var KRILL_INSTALL_METHOD = $10dd //D64 only, Found in loadersymbols-c64.inc
#import "./loader/cartLoader.asm"

 

#if D64
	////////////////////////////////////
	//Add disk boot and directory here
	////////////////////////////////////
	.disk [filename="slideshow.d64", name="TEST LOADER"] {
		[name="SLIDESHOW",		type="prg",	segments="DISK_BOOT"],	//Always first segment, generated by CreateDiskBoot
		[name="BOOT",			type="prg",	segments="BOOT"],	
		[name="PIC0",			type="prg",	segments="PIC0"],	
		[name="PIC1",			type="prg",	segments="PIC1"],
		[name="PIC2",			type="prg",	segments="PIC2"],
		[name="PIC3",			type="prg",	segments="PIC3"],
		[name="PIC4",			type="prg",	segments="PIC4"],
		[name="PIC5",			type="prg",	segments="PIC5"],
		[name="PIC6",			type="prg",	segments="PIC6"],
		[name="PIC7",			type="prg",	segments="PIC7"],
		[name="PIC8",			type="prg",	segments="PIC8"],
		[name="PIC9",			type="prg",	segments="PIC9"],
		[name="PIC10",			type="prg",	segments="PIC10"]
	}

	LOADER_CreateDiskBoot("BOOT", $0900)
#else 
	////////////////////////////////////
	//Add cart filesystem here
	////////////////////////////////////
	LOADER_AddFile("BOOT", BOOT, __BOOT, $0900) //First file will auto load
	LOADER_AddFile("PIC0", PIC0, __PIC0, $0c00)
	LOADER_AddFile("PIC1", PIC1, __PIC1, $0c00)
	LOADER_AddFile("PIC2", PIC2, __PIC2, $0c00)
	LOADER_AddFile("PIC3", PIC3, __PIC3, $0c00)
	LOADER_AddFile("PIC4", PIC4, __PIC4, $0c00)
	LOADER_AddFile("PIC5", PIC5, __PIC5, $0c00)
	LOADER_AddFile("PIC6", PIC6, __PIC6, $0c00)
	LOADER_AddFile("PIC7", PIC7, __PIC7, $0c00)
	LOADER_AddFile("PIC8", PIC8, __PIC8, $0c00)
	LOADER_AddFile("PIC9", PIC9, __PIC9, $0c00)
	LOADER_AddFile("PIC10", PIC10, __PIC10, $0c00)
#endif






.const KOALA_TEMPLATE = "C64FILE, Bitmap=$0000, ScreenRam=$1f40, ColorRam=$2328, BackgroundColor = $2710"
       

// #if D64 
// .segment TEST [start=$0900] 
// #endif
// TEST:	
// 	.pseudopc $0900 {
// 			LOADER_LoadFile("TEST2")
// 			jmp Entry
// 	}
// __TEST:


#if D64 
.segment BOOT [start=$0900] 
#endif
BOOT:
	.pseudopc $0900 {
		.label MAX_PICS = 11
		Timer:
				.byte $00
		TimerToggle:
				.byte $00
		PicNumber:
				.byte $00
		Entry:	
				LOADER_LoadFile("PIC0")

		Setup:
		        lda #$38
		        sta $d018
		        lda #$d8
		        sta $d016
		        lda #0
		        sta $d020

		Display:
		        ldx #0
		!loop:
		        .for (var i=0; i<4; i++) {
		           lda colorRam+i*$100,x
		           sta $d800+i*$100,x
		        }
		        inx
		        bne !loop-
		        lda $0fff
		        sta $d021
		        lda #$3b
		        sta $d011

		        //Infinite loop
		    !MainLoop:
		        lda #$ff	//Wait for line $ff
		        cmp $d012
		        bne *-3
		        inc TimerToggle
		        lda TimerToggle
		        and #$01
		        bne !MainLoop-
		        dec Timer
		        bne !MainLoop-

		        ldx PicNumber
		        inx
		        cpx #MAX_PICS
		        bne !+
		        ldx #$00
		    !:
		    	stx PicNumber

		    	lda #$6b
		    	sta $d011

		    	bne !+
		    	LOADER_LoadFile("PIC0")
		    	jmp Display

		    !:
		    	cpx #$01
		    	bne !+
		    	LOADER_LoadFile("PIC1")
		    	jmp Display

		    !:
		    	cpx #$02
		    	bne !+
		    	LOADER_LoadFile("PIC2")
		    	jmp Display
		    !:
		    	cpx #$03
		    	bne !+
		    	LOADER_LoadFile("PIC3")
		    	jmp Display
		    !:
		    	cpx #$04
		    	bne !+
		    	LOADER_LoadFile("PIC4")
		    	jmp Display
		    !:
		    	cpx #$05
		    	bne !+
		    	LOADER_LoadFile("PIC5")
		    	jmp Display
		    !:
		    	cpx #$06
		    	bne !+
		    	LOADER_LoadFile("PIC6")
		    	jmp Display
		    !:
		    	cpx #$07
		    	bne !+
		    	LOADER_LoadFile("PIC7")
		    	jmp Display
		    !:
		    	cpx #$08
		    	bne !+
		    	LOADER_LoadFile("PIC8")
		    	jmp Display
		    !:
		    	cpx #$09
		    	bne !+
		    	LOADER_LoadFile("PIC9")
		    	jmp Display


		    //fall through / default
		   	!:
		    	LOADER_LoadFile("PIC10")
		    	jmp Display


		    	LOADER_LoadFile("PIC4")
		    	jmp Display
	}
__BOOT:


#if D64 
.segment PIC0 [start=$0c00] 
#endif
PIC0:
	.pseudopc $0c00 {
		.var picture0 = LoadBinary("assets/bitty.kla", KOALA_TEMPLATE)
		//*=$0c00            
			.fill picture0.getScreenRamSize(), picture0.getScreenRam(i)
			.fill $0fff - *, 0
		//*=$0fff
			.byte picture0.getBackgroundColor()
			.fill $1c00 - *, 0
		//*=$1c00
		 	colorRam:  
		 	.fill picture0.getColorRamSize(), picture0.getColorRam(i)
		 	.fill $2000 - *, 0
		//*=$2000            
			.fill picture0.getBitmapSize(), picture0.getBitmap(i)
	}
__PIC0:


#if D64 
.segment PIC1 [start=$0c00] 
#endif
PIC1:
	.pseudopc $0c00 {
		.var picture1 = LoadBinary("assets/car.kla", KOALA_TEMPLATE)
		//*=$0c00            
			.fill picture1.getScreenRamSize(), picture1.getScreenRam(i)
			.fill $0fff - *, 0
		//*=$0fff
			.byte picture1.getBackgroundColor()
			.fill $1c00 - *, 0
		//*=$1c00 
		 	.fill picture1.getColorRamSize(), picture1.getColorRam(i)
		 	.fill $2000 - *, 0
		//*=$2000            
			.fill picture1.getBitmapSize(), picture1.getBitmap(i)
	}
__PIC1:

#if D64 
.segment PIC2 [start=$0c00] 
#endif
PIC2:
	.pseudopc $0c00 {
		.var picture2 = LoadBinary("assets/digdug.kla", KOALA_TEMPLATE)
		//*=$0c00            
			.fill picture2.getScreenRamSize(), picture2.getScreenRam(i)
			.fill $0fff - *, 0
		//*=$0fff
			.byte picture2.getBackgroundColor()
			.fill $1c00 - *, 0
		//*=$1c00 
		 	.fill picture2.getColorRamSize(), picture2.getColorRam(i)
		 	.fill $2000 - *, 0
		//*=$2000            
			.fill picture2.getBitmapSize(), picture2.getBitmap(i)
	}
__PIC2:

#if D64 
.segment PIC3 [start=$0c00] 
#endif
PIC3:
	.pseudopc $0c00 {
		.var picture3 = LoadBinary("assets/doc2.kla", KOALA_TEMPLATE)
		//*=$0c00            
			.fill picture3.getScreenRamSize(), picture3.getScreenRam(i)
			.fill $0fff - *, 0
		//*=$0fff
			.byte picture3.getBackgroundColor()
			.fill $1c00 - *, 0
		//*=$1c00 
		 	.fill picture3.getColorRamSize(), picture3.getColorRam(i)
		 	.fill $2000 - *, 0
		//*=$2000            
			.fill picture3.getBitmapSize(), picture3.getBitmap(i)
	}
__PIC3:

#if D64 
.segment PIC4 [start=$0c00] 
#endif
PIC4:
	.pseudopc $0c00 {
		.var picture4 = LoadBinary("assets/earth.kla", KOALA_TEMPLATE)
		//*=$0c00            
			.fill picture4.getScreenRamSize(), picture4.getScreenRam(i)
			.fill $0fff - *, 0
		//*=$0fff
			.byte picture4.getBackgroundColor()
			.fill $1c00 - *, 0
		//*=$1c00 
		 	.fill picture4.getColorRamSize(), picture4.getColorRam(i)
		 	.fill $2000 - *, 0
		//*=$2000            
			.fill picture4.getBitmapSize(), picture4.getBitmap(i)
	}
__PIC4:

#if D64 
.segment PIC5 [start=$0c00] 
#endif
PIC5:
	.pseudopc $0c00 {
		.var picture5 = LoadBinary("assets/elvis.kla", KOALA_TEMPLATE)
		//*=$0c00            
			.fill picture5.getScreenRamSize(), picture5.getScreenRam(i)
			.fill $0fff - *, 0
		//*=$0fff
			.byte picture5.getBackgroundColor()
			.fill $1c00 - *, 0
		//*=$1c00 
		 	.fill picture5.getColorRamSize(), picture5.getColorRam(i)
		 	.fill $2000 - *, 0
		//*=$2000            
			.fill picture5.getBitmapSize(), picture5.getBitmap(i)
	}
__PIC5:


#if D64 
.segment PIC6 [start=$0c00] 
#endif
PIC6:
	.pseudopc $0c00 {
		.var picture6 = LoadBinary("assets/flower.kla", KOALA_TEMPLATE)
		//*=$0c00            
			.fill picture6.getScreenRamSize(), picture6.getScreenRam(i)
			.fill $0fff - *, 0
		//*=$0fff
			.byte picture6.getBackgroundColor()
			.fill $1c00 - *, 0
		//*=$1c00 
		 	.fill picture6.getColorRamSize(), picture6.getColorRam(i)
		 	.fill $2000 - *, 0
		//*=$2000            
			.fill picture6.getBitmapSize(), picture6.getBitmap(i)
	}
__PIC6:


#if D64 
.segment PIC7 [start=$0c00] 
#endif
PIC7:
	.pseudopc $0c00 {
		.var picture7 = LoadBinary("assets/gene.kla", KOALA_TEMPLATE)
		//*=$0c00            
			.fill picture7.getScreenRamSize(), picture7.getScreenRam(i)
			.fill $0fff - *, 0
		//*=$0fff
			.byte picture7.getBackgroundColor()
			.fill $1c00 - *, 0
		//*=$1c00 
		 	.fill picture7.getColorRamSize(), picture7.getColorRam(i)
		 	.fill $2000 - *, 0
		//*=$2000            
			.fill picture7.getBitmapSize(), picture7.getBitmap(i)
	}
__PIC7:

#if D64 
.segment PIC8 [start=$0c00] 
#endif
PIC8:
	.pseudopc $0c00 {
		.var picture8 = LoadBinary("assets/pipe.kla", KOALA_TEMPLATE)
		//*=$0c00            
			.fill picture8.getScreenRamSize(), picture8.getScreenRam(i)
			.fill $0fff - *, 0
		//*=$0fff
			.byte picture8.getBackgroundColor()
			.fill $1c00 - *, 0
		//*=$1c00 
		 	.fill picture8.getColorRamSize(), picture8.getColorRam(i)
		 	.fill $2000 - *, 0
		//*=$2000            
			.fill picture8.getBitmapSize(), picture8.getBitmap(i)
	}
__PIC8:

#if D64 
.segment PIC9 [start=$0c00] 
#endif
PIC9:
	.pseudopc $0c00 {
		.var picture9 = LoadBinary("assets/statues.kla", KOALA_TEMPLATE)
		//*=$0c00            
			.fill picture9.getScreenRamSize(), picture9.getScreenRam(i)
			.fill $0fff - *, 0
		//*=$0fff
			.byte picture9.getBackgroundColor()
			.fill $1c00 - *, 0
		//*=$1c00 
		 	.fill picture9.getColorRamSize(), picture9.getColorRam(i)
		 	.fill $2000 - *, 0
		//*=$2000            
			.fill picture9.getBitmapSize(), picture9.getBitmap(i)
	}
__PIC9:

#if D64 
.segment PIC10 [start=$0c00] 
#endif
PIC10:
	.pseudopc $0c00 {
		.var picture10 = LoadBinary("assets/boing.kla", KOALA_TEMPLATE)
		//*=$0c00            
			.fill picture10.getScreenRamSize(), picture10.getScreenRam(i)
			.fill $0fff - *, 0
		//*=$0fff
			.byte picture10.getBackgroundColor()
			.fill $1c00 - *, 0
		//*=$1c00 
		 	.fill picture10.getColorRamSize(), picture10.getColorRam(i)
		 	.fill $2000 - *, 0
		//*=$2000            
			.fill picture10.getBitmapSize(), picture10.getBitmap(i)
	}
__PIC10:


#if GMOD2
.print ""
.print "Cartridge - Used space :  $" + toHexString(*) + " / $" +toHexString(64 * 8192) + "  ("+ (floor((*/(64*8192))*10000)/100)+"%)"
.print ""
#endif